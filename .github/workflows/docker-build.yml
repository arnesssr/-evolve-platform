name: Build and Publish Docker Image

on:
  push:
    branches: [ main, version-* ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
      actions: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=dev,enable={{is_default_branch}}

    - name: Create requirements.txt if not exists
      run: |
        if [ ! -f requirements.txt ]; then
          echo "Django>=4.0,<5.0" > requirements.txt
          echo "requests>=2.28.0" >> requirements.txt
          echo "pillow>=9.0.0" >> requirements.txt
        fi

    - name: Build Docker image locally for scanning
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: false
        tags: local-scan:latest
        cache-from: type=gha
        load: true

    - name: Run security scan
      if: github.event_name != 'pull_request'
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'local-scan:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'
        exit-code: '0'
      continue-on-error: true

    - name: Upload Trivy scan results to GitHub Security
      if: github.event_name != 'pull_request' && always() && hashFiles('trivy-results.sarif') != ''
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
        category: 'container-security'
      continue-on-error: true
      
    - name: Display security scan summary
      if: github.event_name != 'pull_request' && always() && hashFiles('trivy-results.sarif') != ''
      run: |
        echo "üõ°Ô∏è Security scan completed!"
        echo "üìã SARIF results file: trivy-results.sarif"
        echo "üîç Check the Security tab in GitHub for detailed vulnerability reports"
        if [ -f trivy-results.sarif ]; then
          echo "üìä Security scan results generated successfully"
        else
          echo "‚ö†Ô∏è No security scan results file found"
        fi

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Test Docker image
      run: |
        docker build -t test-image .
        docker run --rm -d --name test-container -p 8000:8000 test-image
        sleep 10
        curl -f http://localhost:8000/ || exit 1
        docker stop test-container
